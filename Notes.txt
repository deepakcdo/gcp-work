cd ~/test

// create a cluster
gcloud beta container --project "deepak-cloud-work" clusters delete "my-k8-new" --zone "europe-north1-a"
gcloud beta container --project "deepak-cloud-work" clusters create "my-k8-new" --zone "europe-north1-a" --no-enable-basic-auth --cluster-version "1.16.15-gke.4901" --release-channel "stable" --machine-type "e2-medium" --image-type "COS" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --preemptible --num-nodes "3" --enable-stackdriver-kubernetes --enable-ip-alias --network "projects/deepak-cloud-work/global/networks/default" --subnetwork "projects/deepak-cloud-work/regions/europe-north1/subnetworks/default" --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0


git clone https://github.com/kubernetes/examples
cd examples/guestbook

gcloud container clusters get-credentials my-k8-new --zone europe-north1-a

kubectl create -f redis-master-deployment.yaml
kubectl create -f redis-master-service.yaml
kubectl create -f redis-slave-deployment.yaml
kubectl create -f redis-slave-service.yaml
kubectl create -f frontend-deployment.yaml
sed -i -e 's/NodePort/LoadBalancer/g' frontend-service.yaml
kubectl create -f frontend-service.yaml
kubectl get services --watch


//kubernetes dashboard
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | sls admin-user | ForEach-Object { $_ -Split '\s+' } | Select -First 1)
kubectl proxy
Check Url  http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/

//weave dashboard
kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040
Check url http://localhost:4040

// check pods-per-node
kubectl get pods
kubectl get service
kubectl get pods


Install on wsl (https://cloud.google.com/sdk/docs/install#deb)

echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
sudo apt-get install apt-transport-https ca-certificates gnupg
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
sudo apt-get update && sudo apt-get install google-cloud-sdk

sudo apt-get install kubectl
